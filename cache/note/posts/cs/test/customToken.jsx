import Anchor from "@/components/md/Anchor.vue";
import BlockCode from "@/components/md/BlockCode.vue";
import BlockMath from "@/components/md/BlockMath.vue";
import Fold from "@/components/md/Fold.vue";
import ImageCaptioned from "@/components/md/ImageCaptioned.vue";
import InlineMath from "@/components/md/InlineMath.vue";
import LinkCard from "@/components/md/LinkCard.vue";
import Note from "@/components/md/Note.vue";
import SVGCaptioned from "@/components/md/SVGCaptioned.vue";
import Tab from "@/components/md/Tab.vue";
export default <><h2 id="t" tabindex="-1" class="heading">数学公式 <a class="cursor header-anchor" href="#t">¶</a></h2>
<p>利用 <Anchor href="https://katex.org/">KaTeX</Anchor> 渲染数学公式。</p>
<h3 id="t-2" tabindex="-1" class="heading">行内公式 <a class="cursor header-anchor" href="#t-2">¶</a></h3>
<BlockCode lang="md" html={"<code class=\"language-md\">... $<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>公式内容</span><span class=\"token punctuation\">></span></span>$ ...\n</code>"}></BlockCode><Tab>
<h1>效果</h1>
<p>可以不难推得 <InlineMath data={"\\varphi(n):=n\\prod_{p\\mid n}(1-\\frac{1}{p})"}></InlineMath>。</p>
<p><InlineMath data={"\\mathfrak{Xecades}"}></InlineMath> 这个名字来源于单词 Decade：<InlineMath data={"\\text{10 Decades}\\rightarrow \\text{X Decades}\\rightarrow \\text{Xecades}"}></InlineMath>。</p>
<h1>源码</h1>
<BlockCode lang="md" html={"<code class=\"language-md\">可以不难推得 $\\varphi(n):=n\\prod_{p\\mid n}(1-\\frac{1}{p})$。\n\n$\\mathfrak{Xecades}$ 这个名字来源于单词 Decade：$\\text{10 Decades}\\rightarrow \\text{X Decades}\\rightarrow \\text{Xecades}$。\n</code>"}></BlockCode></Tab>
<h3 id="t-3" tabindex="-1" class="heading">行间公式 <a class="cursor header-anchor" href="#t-3">¶</a></h3>
<BlockCode lang="md" html={"<code class=\"language-md\">$$\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>公式内容</span><span class=\"token punctuation\">></span></span>\n$$\n</code>"}></BlockCode><Tab>
<h1>效果</h1>
<BlockMath data={"\\begin{aligned}\n&\\Bigl(f*g\\Bigr)(6) \\\\\n=&\\sum_{d\\mid 6}f(d)g\\biggl(\\dfrac{6}{d}\\biggr) \\\\\n=&f(1)g(6)+f(2)g(3)+f(3)g(2)+f(6)g(1)\n\\end{aligned}\n"}></BlockMath><h1>源码</h1>
<BlockCode lang="md" html={"<code class=\"language-md\">$$\n\\begin{aligned}\n&amp;\\Bigl(f*g\\Bigr)(6) \\\\\n=&amp;\\sum_{d\\mid 6}f(d)g\\biggl(\\dfrac{6}{d}\\biggr) \\\\\n=&amp;f(1)g(6)+f(2)g(3)+f(3)g(2)+f(6)g(1)\n\\end{aligned}\n$$\n</code>"}></BlockCode></Tab>
<hr />
<h2 id="t-4" tabindex="-1" class="heading">Emoji <a class="cursor header-anchor" href="#t-4">¶</a></h2>
<p>使用 <Anchor href="https://github.com/omnidan/node-emoji"><code class="inline-code">Node-emoji</code> 库</Anchor>转译 Emoji。</p>
<BlockCode lang="md" html={"<code class=\"language-md\">... :<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>emoji</span><span class=\"token punctuation\">></span></span>: ...\n</code>"}></BlockCode><Tab>
<h1>效果</h1>
<p>诶，🤓 👆 我有一计！</p>
<h1>源码</h1>
<BlockCode lang="md" html={"<code class=\"language-md\">诶，:nerd_face: :point_up_2: 我有一计！\n</code>"}></BlockCode></Tab>
<hr />
<h2 id="t-5" tabindex="-1" class="heading">引言 <a class="cursor header-anchor" href="#t-5">¶</a></h2>
<p>适合用于展示名言、引用等。</p>
<BlockCode lang="md" html={"<code class=\"language-md\">::quote\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>引言内容</span><span class=\"token punctuation\">></span></span>\n::\n</code>"}></BlockCode><Tab>
<h1>效果</h1>
<div class="quote">Two roads diverged in a wood, and I—<br />
I took <em>the one less traveled by</em>,<br />
And that has made all the difference.<br />
<div class="right">—Robert Frost</div></div>
<h1>源码</h1>
<BlockCode lang="md" html={"<code class=\"language-md\">:::quote\nTwo roads diverged in a wood, and I—\\\nI took <span class=\"token italic\"><span class=\"token punctuation\">*</span><span class=\"token content\">the one less traveled by</span><span class=\"token punctuation\">*</span></span>,\\\nAnd that has made all the difference.\\\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>right</span><span class=\"token punctuation\">></span></span>—Robert Frost<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>right</span><span class=\"token punctuation\">></span></span>\n:::\n</code>"}></BlockCode></Tab>
<div class="quote">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</div>
<div class="quote">
<BlockMath data={"e ^ {i \\pi} + 1 = 0\n"}></BlockMath></div>
<hr />
<h2 id="t-6" tabindex="-1" class="heading">Note <a class="cursor header-anchor" href="#t-6">¶</a></h2>
<p>功能上类似于 MkDocs Material 的 <Anchor href="https://squidfunk.github.io/mkdocs-material/reference/admonitions/">Admonitions</Anchor>，用于提供额外信息。</p>
<BlockCode lang="md" html={"<code class=\"language-md\">::note{[default] | primary | success | info | warning | danger}\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>Note</span> <span class=\"token attr-name\">内容</span><span class=\"token punctuation\">></span></span>\n::\n</code>"}></BlockCode><Tab>
<h1>效果</h1>
<Note>这里是 <code class="inline-code">note.default</code> 的内容</Note>
<h1>源码</h1>
<BlockCode lang="md" html={"<code class=\"language-md\">:::note\n这里是 <span class=\"token code-snippet code keyword\">`note.default`</span> 的内容\n:::\n</code>"}></BlockCode></Tab>
<Tab>
<h1>效果</h1>
<Note type="danger"><InlineMath data={"\\text{P} \\neq \\text{NP}"}></InlineMath></Note>
<h1>源码</h1>
<BlockCode lang="md" html={"<code class=\"language-md\">:::note{danger}\n$\\text{P} \\neq \\text{NP}$\n:::\n</code>"}></BlockCode></Tab>
<Note type="primary">这里是 <code class="inline-code">note.primary</code> 的内容</Note>
<Note type="success">这里是 <code class="inline-code">note.success</code> 的内容</Note>
<Note type="info">这里是 <code class="inline-code">note.info</code> 的内容</Note>
<Note type="warning">这里是 <code class="inline-code">note.warning</code> 的内容</Note>
<Note type="danger">这里是 <code class="inline-code">note.danger</code> 的内容</Note>
<Note type="success">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</Note>
<hr />
<h2 id="t-7" tabindex="-1" class="heading">折叠面板 <a class="cursor header-anchor" href="#t-7">¶</a></h2>
<BlockCode lang="md" html={"<code class=\"language-md\">::fold{title=\"[标题]\" <span class=\"token url\">[<span class=\"token content\">expand</span>] [<span class=\"token variable\">default</span>]</span> | primary | success | info | warning | danger}\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>折叠内容</span><span class=\"token punctuation\">></span></span>\n::\n</code>"}></BlockCode><Tab>
<h1>效果</h1>
<Fold title={<>默认展开的 <code class="inline-code">default</code> 折叠面板</>} expand>这里是 <code class="inline-code">fold.default</code> 的内容</Fold>
<h1>源码</h1>
<BlockCode lang="md" html={"<code class=\"language-md\">:::fold{title=\"默认展开的 <span class=\"token code-snippet code keyword\">`default`</span> 折叠面板\" expand}\n这里是 <span class=\"token code-snippet code keyword\">`fold.default`</span> 的内容\n:::\n</code>"}></BlockCode></Tab>
<Fold title={<><code class="inline-code">primary</code> 折叠面板</>} type="primary">这里是 <code class="inline-code">fold.primary</code> 的内容</Fold>
<Fold title={<><code class="inline-code">success</code> 折叠面板</>} type="success">这里是 <code class="inline-code">fold.success</code> 的内容</Fold>
<Fold title={<><code class="inline-code">info</code> 折叠面板</>} type="info">这里是 <code class="inline-code">fold.info</code> 的内容</Fold>
<Fold title={<><code class="inline-code">warning</code> 折叠面板</>} type="warning">这里是 <code class="inline-code">fold.warning</code> 的内容</Fold>
<Fold title={<><code class="inline-code">danger</code> 折叠面板</>} type="danger">这里是 <code class="inline-code">fold.danger</code> 的内容</Fold>
<Fold title={<>标题是支持 <InlineMath data={"\\LaTeX"}></InlineMath> 的</>} expand type="success">
<p>折叠面板也支持 <InlineMath data={"\\LaTeX"}></InlineMath>！</p>
<BlockMath data={"\\begin{aligned}\n&\\Bigl(f*g\\Bigr)(6) \\\\\n=&\\sum_{d\\mid 6}f(d)g\\biggl(\\dfrac{6}{d}\\biggr) \\\\\n=&f(1)g(6)+f(2)g(3)+f(3)g(2)+f(6)g(1)\n\\end{aligned}\n"}></BlockMath></Fold>
<Fold title={<>Lorem</>} type="danger">
<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>
<p>Veniam irure ipsum dolore dolore Lorem voluptate adipisicing eiusmod minim. Eu incididunt enim irure nisi. Amet eu nostrud irure Lorem mollit eu ipsum excepteur cillum irure in sint reprehenderit deserunt. Occaecat adipisicing culpa excepteur magna id dolor exercitation ut ea dolor ut veniam est eiusmod. Consequat qui ut labore dolor ut. Ipsum ullamco commodo veniam occaecat fugiat sint consectetur nisi deserunt sunt ullamco et veniam. Do commodo mollit voluptate veniam ipsum irure dolore nisi.</p>
</Fold>
<Fold type="primary">
<div class="quote">这个折叠面板没有标题</div>
</Fold>
<Fold title={<>这个折叠面板的标题真的真的真的真的真的真的真的真的真的真的真的真的非常的长，而且里面还有 <code class="inline-code">code</code> 块</>}>
<BlockCode lang="python" html={"<code class=\"language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello World\"</span><span class=\"token punctuation\">)</span>\n</code>"}></BlockCode></Fold>
<hr />
<h2 id="t-8" tabindex="-1" class="heading">链接卡片 <a class="cursor header-anchor" href="#t-8">¶</a></h2>
<BlockCode lang="md" html={"<code class=\"language-md\">::linkcard{href=\"<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>链接地址</span><span class=\"token punctuation\">></span></span>\"}\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>链接名称</span><span class=\"token punctuation\">></span></span>\n::\n</code>"}></BlockCode><Tab>
<h1>效果</h1>
<LinkCard href="https://blog.xecades.xyz/">Xecades 的博客</LinkCard>
<h1>源码</h1>
<BlockCode lang="md" html={"<code class=\"language-md\">:::linkcard{href=\"https://blog.xecades.xyz/\"}\nXecades 的博客\n:::\n</code>"}></BlockCode></Tab>
<LinkCard href="https://github.com/xecades/alpha"><InlineMath data={"\\mathfrak{Xecades} :: \\alpha"}></InlineMath> 的 GitHub 仓库</LinkCard>
<LinkCard href="/">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</LinkCard>
<hr />
<h2 id="t-9" tabindex="-1" class="heading">Typst 渲染 <a class="cursor header-anchor" href="#t-9">¶</a></h2>
<p>基于 <Anchor href="https://myriad-dreamin.github.io/typst.ts">Typst.ts</Anchor> 实现 Typst 的渲染。</p>
<BlockCode lang="plain" html={"<code>```typst [标题]\n&lt;Typst 代码&gt;\n```\n</code>"}></BlockCode><Tab>
<h1>效果</h1>
<SVGCaptioned svg={"<svg class=\"typst-doc\" viewBox=\"0 0 344.000 273.000\" width=\"344.000\" height=\"273.000\" data-width=\"344.000\" data-height=\"273.000\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" xmlns:h5=\"http://www.w3.org/1999/xhtml\"><style type=\"text/css\">.typst-text {\n  pointer-events: bounding-box;\n}\n\n.tsel span,\n.tsel {\n  left: 0;\n  position: fixed;\n  text-align: justify;\n  white-space: nowrap;\n  width: 100%;\n  height: 100%;\n  text-align-last: justify;\n  color: transparent;\n  white-space: pre;\n}\n.tsel span::-moz-selection,\n.tsel::-moz-selection {\n  color: transparent;\n  background: #7db9dea0;\n}\n.tsel span::selection,\n.tsel::selection {\n  color: transparent;\n  background: #7db9dea0;\n}\n.pseudo-link {\n  fill: transparent;\n  cursor: pointer;\n  pointer-events: all;\n}\nsvg {\n  fill: none;\n}\n\n.outline_glyph path,\npath.outline_glyph {\n  fill: var(--glyph_fill);\n  stroke: var(--glyph_stroke);\n}\n\n.outline_glyph path,\npath.outline_glyph {\n  transition: 0.2s fill stroke;\n}\n.hover .typst-text {\n  --glyph_fill: #66bab7;\n  --glyph_stroke: #66bab7;\n}\n\n.typst-jump-ripple,\n.typst-debug-react-ripple {\n  width: 0;\n  height: 0;\n  background-color: transparent;\n  position: absolute;\n  border-radius: 50%;\n}\n.typst-jump-ripple {\n  border: 1px solid #66bab7;\n}\n.typst-debug-react-ripple {\n  border: 1px solid #cb1b45;\n}\n@keyframes typst-jump-ripple-effect {\n  to {\n    width: 10vw;\n    height: 10vw;\n    opacity: 0.01;\n    margin: -5vw;\n  }\n}\n@keyframes typst-debug-react-ripple-effect {\n  to {\n    width: 3vw;\n    height: 3vw;\n    opacity: 0.01;\n    margin: -1.5vw;\n  }\n}\n</style><defs class=\"glyph\"><path id=\"gFkv8MxQ\" class=\"outline_glyph\" d=\"M 590 250 Q 590 127 621.5 97.5 Q 653 68 768 63 Q 778 53 778 28.5 Q 778 4 768 -4 Q 563 0 518 0 Q 434 0 233 -4 Q 225 4 225 28.5 Q 225 53 233 63 Q 352 67 392 99 Q 432 131 432 250 L 432 918 Q 432 1037 391 1036 Q 336 1036 213 985 Q 188 1001 182 1040 Q 469 1173 584 1245 Q 596 1245 596 1235 Q 590 1188 590 961 L 590 250 Z \"/><path id=\"gFkv8MxU\" class=\"outline_glyph\" d=\"M 125 958 Q 125 1060 229.5 1154.5 Q 334 1249 494 1249 Q 633 1249 736.5 1170.5 Q 840 1092 840 938 Q 840 864 809 798.5 Q 778 733 742.5 691 Q 707 649 635 580 L 428 381 Q 276 229 276 133 L 641 133 Q 696 133 727 176 Q 758 219 784 330 Q 823 338 844 319 Q 840 176 795 -4 Q 701 0 635 0 L 276 0 L 106 -4 Q 106 94 152.5 185 Q 199 276 340 420 L 492 569 Q 660 739 659 930 Q 659 1063 605 1120.5 Q 551 1178 481 1178 Q 379 1178 329 1139 Q 279 1100 279 1053 Q 279 1043 287 1024.5 Q 295 1006 295 1004 Q 303 975 303 961 Q 303 930 269.5 904.5 Q 236 879 207 879 Q 174 879 149.5 902 Q 125 925 125 958 Z \"/><path id=\"gFkv8MxY\" class=\"outline_glyph\" d=\"M 440 1178 Q 403 1178 364.5 1167.5 Q 326 1157 286 1119 Q 246 1081 246 1022 Q 246 916 166 915 Q 133 915 114.5 938 Q 96 961 96 985 Q 96 1016 115.5 1056 Q 135 1096 176 1142 Q 217 1188 298 1218.5 Q 379 1249 483 1249 Q 628 1249 707 1169 Q 771 1104 771 1007 Q 771 921 723 856.5 Q 675 792 555 735 L 557 731 Q 672 713 759 635 Q 846 557 846 408 Q 846 213 710.5 96.5 Q 575 -20 385 -20 Q 283 -20 186.5 19.5 Q 90 59 90 117 Q 90 142 117.5 165 Q 145 188 176 188 Q 225 188 264 135 Q 266 133 273.5 122 Q 281 111 284 106.5 Q 287 102 294 93 Q 301 84 307 80 Q 313 76 324.5 68.5 Q 336 61 348 58 Q 360 55 376.5 53 Q 393 51 412 51 Q 445 51 482.5 65.5 Q 520 80 564 111.5 Q 608 143 637 213 Q 666 283 666 379 Q 666 643 397 643 Q 334 643 299 639 L 289 705 Q 431 725 521 815.5 Q 611 906 611 993 Q 611 1086 562 1132 Q 513 1178 440 1178 Z \"/><path id=\"gFkv8Mxc\" class=\"outline_glyph\" d=\"M 555 1038 Q 399 825 164 449 L 555 449 L 555 1038 Z M 881 449 Q 912 449 911 416 Q 911 398 891.5 375 Q 872 352 852 352 L 711 352 L 711 164 Q 711 131 716 111.5 Q 721 92 742.5 83 Q 764 74 776 72 Q 788 70 833 65 Q 847 63 854 63 Q 864 53 864 28.5 Q 864 4 854 -4 Q 723 0 631 0 Q 520 0 389 -4 Q 381 4 381 28.5 Q 381 53 389 63 Q 499 71 526 93 Q 555 116 555 164 L 555 352 L 137 352 Q 74 352 57 438 Q 374 936 612 1227 Q 630 1250 645 1249 L 711 1249 L 715 1245 Q 711 1227 711 1047 L 711 449 L 881 449 Z \"/><path id=\"gFkv8Mxg\" class=\"outline_glyph\" d=\"M 653 387 Q 653 547 587.5 622.5 Q 522 698 416 698 Q 287 698 156 649 L 225 1239 Q 344 1229 446 1229 Q 569 1229 782 1251 L 797 1243 L 764 1104 Q 639 1092 549 1092 Q 479 1092 309 1110 L 268 768 Q 352 801 469 801 Q 635 801 735.5 690.5 Q 836 580 836 424 Q 836 229 714 103 Q 592 -23 401 -23 Q 307 -23 209 24.5 Q 111 72 111 131 Q 111 162 134.5 184.5 Q 158 207 188 207 Q 243 207 293 141 Q 295 137 305 124 Q 315 111 319.5 104.5 Q 324 98 334 88 Q 344 78 352 73 Q 360 68 372.5 60.5 Q 385 53 398.5 51 Q 412 49 428 49 Q 522 49 587.5 146.5 Q 653 244 653 387 Z \"/><path id=\"gFkv8Mxk\" class=\"outline_glyph\" d=\"M 277 629 Q 260 547 260 469 Q 260 227 326.5 138 Q 393 49 506 49 Q 586 49 639 133 Q 692 217 692 377 Q 692 422 681 468 Q 670 514 645.5 563 Q 621 612 569.5 644 Q 518 676 446 676 Q 349 676 277 629 Z M 296 703 Q 393 747 489 748 Q 684 748 773 654.5 Q 862 561 862 414 Q 862 256 764 116.5 Q 666 -23 483 -23 Q 415 -23 354 -2.5 Q 293 18 229.5 68.5 Q 166 119 128 223.5 Q 90 328 90 475 Q 90 749 281 971 Q 451 1170 729 1251 Q 754 1237 754 1198 Q 565 1127 454.5 995 Q 344 863 296 703 Z \"/><path id=\"gFkv8Mxo\" class=\"outline_glyph\" d=\"M 348 1096 Q 309 1096 281.5 1086.5 Q 254 1077 222 1036 Q 190 995 170 918 Q 139 914 104 924 Q 143 1180 145 1251 Q 145 1257 154 1257 Q 162 1255 188.5 1242 Q 215 1229 256 1229 L 678 1229 Q 760 1229 836 1251 L 868 1227 Q 647 686 410 -20 L 270 -27 L 254 -12 Q 406 326 715 1096 L 348 1096 Z \"/><path id=\"gFkv8Mxs\" class=\"outline_glyph\" d=\"M 479 1178 Q 391 1178 341 1128.5 Q 291 1079 291 1006 Q 291 949 318.5 898.5 Q 346 848 434 791 L 498 752 Q 662 873 662 995 Q 662 1073 617.5 1125.5 Q 573 1178 479 1178 Z M 805 993 Q 805 905 726 830.5 Q 647 756 553 709 L 698 621 Q 858 525 858 332 Q 858 201 751.5 90.5 Q 645 -20 459 -20 Q 293 -20 193.5 62.5 Q 94 145 94 299 Q 94 440 213 545 Q 284 607 378 657 L 326 690 Q 146 803 145 967 Q 145 1088 240.5 1168.5 Q 336 1249 489 1249 Q 636 1249 720.5 1177.5 Q 805 1106 805 993 Z M 463 51 Q 557 51 633 103.5 Q 709 156 709 291 Q 709 455 530 563 L 434 621 Q 319 545 275 456 Q 231 367 231 299 Q 231 174 304 112.5 Q 377 51 463 51 Z \"/></defs><defs class=\"clip-path\"></defs><style type=\"text/css\"></style><g class=\"typst-page\" transform=\"translate(0, 0)\" data-tid=\"piRfWt+wyPz0TbMdwwFcZLM\" data-page-width=\"344\" data-page-height=\"273\"><g data-tid=\"giRfWt+wyPz0TbMdwwFcZLM\" class=\"typst-group\"><g transform=\"translate(5.000,5.000)\" data-tid=\"ph+DEx+LgbRYXNvc5T/PBWo\"><g data-tid=\"gh+DEx+LgbRYXNvc5T/PBWo\" class=\"typst-group\"><g transform=\"translate(115.158,0.000)\" data-tid=\"pg9+elDdhYPAKDBaYD8hPZw\"><g data-tid=\"gg9+elDdhYPAKDBaYD8hPZw\"><path class=\"typst-shape\" d=\"M 0 0 M 24.803188 0 C 38.48919 0 49.606377 11.117186 49.606377 24.803188 C 49.606377 24.803188 49.606377 24.803188 49.606377 24.803188 C 49.606377 38.48919 38.48919 49.606377 24.803188 49.606377 C 24.803188 49.606377 24.803188 49.606377 24.803188 49.606377 C 11.117186 49.606377 0 38.48919 0 24.803188 C 0 24.803188 0 24.803188 0 24.803188 C 0 11.117186 11.117186 0 24.803188 0 C 24.803188 0 24.803188 0 24.803188 0 Z \" stroke-width=\"1\" stroke-miterlimit=\"4\" fill=\"none\" stroke=\"#000\" /></g></g><g transform=\"translate(0.000,0.000)\" data-tid=\"p0C06tIdba409v5qRtgGNOo\"><g data-tid=\"g0C06tIdba409v5qRtgGNOo\" class=\"typst-group\"><g transform=\"translate(131.594,18.879)\" data-tid=\"pyOfKdmpJs2sY/+kg2oUm9E\"><g data-tid=\"gyOfKdmpJs2sY/+kg2oUm9E\" class=\"typst-group\"><g transform=\"translate(0.000,11.848)\" data-tid=\"piKjkMvZUY94iDZ/EI+u1yM\"><g data-tid=\"giKjkMvZUY94iDZ/EI+u1yM\" class=\"typst-text\" fill=\"#000\" transform=\"scale(0.0087890625,-0.0087890625)\"><use x=\"0\" href=\"#gFkv8MxQ\"/><use x=\"952\" href=\"#gFkv8Mxg\"/><g transform=\"scale(16,-16)\"><foreignObject x=\"0\" y=\"-114.44\" width=\"119.00\" height=\"128.00\"><h5:div class=\"tsel\" style=\"font-size: 128px\">15</h5:div></foreignObject></g></g></g><g transform=\"translate(0.000,0.000)\" data-tid=\"p0+gtZddxoNYshhlcZUkfo8\"><g data-tid=\"g0+gtZddxoNYshhlcZUkfo8\" class=\"typst-content-hint\" data-hint=\"a\"></g></g></g></g></g></g><g transform=\"translate(35.433,70.866)\" data-tid=\"pg9+elDdhYPAKDBaYD8hPZw\"><g data-tid=\"gg9+elDdhYPAKDBaYD8hPZw\"><path class=\"typst-shape\" d=\"M 0 0 M 24.803188 0 C 38.48919 0 49.606377 11.117186 49.606377 24.803188 C 49.606377 24.803188 49.606377 24.803188 49.606377 24.803188 C 49.606377 38.48919 38.48919 49.606377 24.803188 49.606377 C 24.803188 49.606377 24.803188 49.606377 24.803188 49.606377 C 11.117186 49.606377 0 38.48919 0 24.803188 C 0 24.803188 0 24.803188 0 24.803188 C 0 11.117186 11.117186 0 24.803188 0 C 24.803188 0 24.803188 0 24.803188 0 Z \" stroke-width=\"1\" stroke-miterlimit=\"4\" fill=\"none\" stroke=\"#000\" /></g></g><g transform=\"translate(0.000,0.000)\" data-tid=\"pQNNcZohmuzEekQCdtG+Xpc\"><g data-tid=\"gQNNcZohmuzEekQCdtG+Xpc\" class=\"typst-group\"><g transform=\"translate(51.869,89.746)\" data-tid=\"p2v66ok31mhEXgUFkFYuh2c\"><g data-tid=\"g2v66ok31mhEXgUFkFYuh2c\" class=\"typst-group\"><g transform=\"translate(0.000,11.848)\" data-tid=\"pxVbaK9+PXzYbnqMbrVm6/o\"><g data-tid=\"gxVbaK9+PXzYbnqMbrVm6/o\" class=\"typst-text\" fill=\"#000\" transform=\"scale(0.0087890625,-0.0087890625)\"><use x=\"0\" href=\"#gFkv8MxQ\"/><use x=\"952\" href=\"#gFkv8MxY\"/><g transform=\"scale(16,-16)\"><foreignObject x=\"0\" y=\"-114.44\" width=\"119.00\" height=\"128.00\"><h5:div class=\"tsel\" style=\"font-size: 128px\">13</h5:div></foreignObject></g></g></g><g transform=\"translate(0.000,0.000)\" data-tid=\"p0+gtZddxoNYshhlcZUkfo8\"><g data-tid=\"g0+gtZddxoNYshhlcZUkfo8\" class=\"typst-content-hint\" data-hint=\"a\"></g></g></g></g></g></g><g transform=\"translate(0.000,141.732)\" data-tid=\"pg9+elDdhYPAKDBaYD8hPZw\"><g data-tid=\"gg9+elDdhYPAKDBaYD8hPZw\"><path class=\"typst-shape\" d=\"M 0 0 M 24.803188 0 C 38.48919 0 49.606377 11.117186 49.606377 24.803188 C 49.606377 24.803188 49.606377 24.803188 49.606377 24.803188 C 49.606377 38.48919 38.48919 49.606377 24.803188 49.606377 C 24.803188 49.606377 24.803188 49.606377 24.803188 49.606377 C 11.117186 49.606377 0 38.48919 0 24.803188 C 0 24.803188 0 24.803188 0 24.803188 C 0 11.117186 11.117186 0 24.803188 0 C 24.803188 0 24.803188 0 24.803188 0 Z \" stroke-width=\"1\" stroke-miterlimit=\"4\" fill=\"none\" stroke=\"#000\" /></g></g><g transform=\"translate(0.000,0.000)\" data-tid=\"p+ysYuTGXLoAovi70A/WTZ4\"><g data-tid=\"g+ysYuTGXLoAovi70A/WTZ4\" class=\"typst-group\"><g transform=\"translate(16.436,160.612)\" data-tid=\"pV+S+0tKRBdM0AaCaOhCyNc\"><g data-tid=\"gV+S+0tKRBdM0AaCaOhCyNc\" class=\"typst-group\"><g transform=\"translate(0.000,11.848)\" data-tid=\"pZ/eGv0gDV6AmKB8Gg+YZx0\"><g data-tid=\"gZ/eGv0gDV6AmKB8Gg+YZx0\" class=\"typst-text\" fill=\"#000\" transform=\"scale(0.0087890625,-0.0087890625)\"><use x=\"0\" href=\"#gFkv8MxQ\"/><use x=\"952\" href=\"#gFkv8MxU\"/><g transform=\"scale(16,-16)\"><foreignObject x=\"0\" y=\"-114.44\" width=\"119.00\" height=\"128.00\"><h5:div class=\"tsel\" style=\"font-size: 128px\">12</h5:div></foreignObject></g></g></g><g transform=\"translate(0.000,0.000)\" data-tid=\"p0+gtZddxoNYshhlcZUkfo8\"><g data-tid=\"g0+gtZddxoNYshhlcZUkfo8\" class=\"typst-content-hint\" data-hint=\"a\"></g></g></g></g></g></g><g transform=\"translate(70.866,141.732)\" data-tid=\"pg9+elDdhYPAKDBaYD8hPZw\"><g data-tid=\"gg9+elDdhYPAKDBaYD8hPZw\"><path class=\"typst-shape\" d=\"M 0 0 M 24.803188 0 C 38.48919 0 49.606377 11.117186 49.606377 24.803188 C 49.606377 24.803188 49.606377 24.803188 49.606377 24.803188 C 49.606377 38.48919 38.48919 49.606377 24.803188 49.606377 C 24.803188 49.606377 24.803188 49.606377 24.803188 49.606377 C 11.117186 49.606377 0 38.48919 0 24.803188 C 0 24.803188 0 24.803188 0 24.803188 C 0 11.117186 11.117186 0 24.803188 0 C 24.803188 0 24.803188 0 24.803188 0 Z \" stroke-width=\"1\" stroke-miterlimit=\"4\" fill=\"none\" stroke=\"#000\" /></g></g><g transform=\"translate(0.000,0.000)\" data-tid=\"plxbSdk/qFdYJmb9sZ5N2hE\"><g data-tid=\"glxbSdk/qFdYJmb9sZ5N2hE\" class=\"typst-group\"><g transform=\"translate(87.302,160.612)\" data-tid=\"pc7SVK24xoIoREAKCt9QJag\"><g data-tid=\"gc7SVK24xoIoREAKCt9QJag\" class=\"typst-group\"><g transform=\"translate(0.000,11.848)\" data-tid=\"pea7D7PnDZl4eplaCcZEDD0\"><g data-tid=\"gea7D7PnDZl4eplaCcZEDD0\" class=\"typst-text\" fill=\"#000\" transform=\"scale(0.0087890625,-0.0087890625)\"><use x=\"0\" href=\"#gFkv8MxQ\"/><use x=\"952\" href=\"#gFkv8Mxc\"/><g transform=\"scale(16,-16)\"><foreignObject x=\"0\" y=\"-114.44\" width=\"119.00\" height=\"128.00\"><h5:div class=\"tsel\" style=\"font-size: 128px\">14</h5:div></foreignObject></g></g></g><g transform=\"translate(0.000,0.000)\" data-tid=\"p0+gtZddxoNYshhlcZUkfo8\"><g data-tid=\"g0+gtZddxoNYshhlcZUkfo8\" class=\"typst-content-hint\" data-hint=\"a\"></g></g></g></g></g></g><g transform=\"translate(35.896,117.855)\" data-tid=\"pBZ9gpjzqopcNmG8pyBG8f4\"><g data-tid=\"gBZ9gpjzqopcNmG8pyBG8f4\"><path class=\"typst-shape\" d=\"M 0 0 M 13.247602 0 C 13.247602 0 0 26.495205 0 26.495205 \" stroke-width=\"1\" stroke-miterlimit=\"4\" fill=\"none\" stroke=\"#000\" /></g></g><g transform=\"translate(71.329,117.855)\" data-tid=\"pPhJP5Jp1+g0O87MigvEZhc\"><g data-tid=\"gPhJP5Jp1+g0O87MigvEZhc\"><path class=\"typst-shape\" d=\"M 0 0 M 0 0 C 0 0 13.247602 26.495205 13.247602 26.495205 \" stroke-width=\"1\" stroke-miterlimit=\"4\" fill=\"none\" stroke=\"#000\" /></g></g><g transform=\"translate(194.882,70.866)\" data-tid=\"pg9+elDdhYPAKDBaYD8hPZw\"><g data-tid=\"gg9+elDdhYPAKDBaYD8hPZw\"><path class=\"typst-shape\" d=\"M 0 0 M 24.803188 0 C 38.48919 0 49.606377 11.117186 49.606377 24.803188 C 49.606377 24.803188 49.606377 24.803188 49.606377 24.803188 C 49.606377 38.48919 38.48919 49.606377 24.803188 49.606377 C 24.803188 49.606377 24.803188 49.606377 24.803188 49.606377 C 11.117186 49.606377 0 38.48919 0 24.803188 C 0 24.803188 0 24.803188 0 24.803188 C 0 11.117186 11.117186 0 24.803188 0 C 24.803188 0 24.803188 0 24.803188 0 Z \" stroke-width=\"1\" stroke-miterlimit=\"4\" fill=\"none\" stroke=\"#000\" /></g></g><g transform=\"translate(0.000,0.000)\" data-tid=\"p56yFQZPysGs3GZ7ji0pGwg\"><g data-tid=\"g56yFQZPysGs3GZ7ji0pGwg\" class=\"typst-group\"><g transform=\"translate(211.318,89.746)\" data-tid=\"pIZkbQtewqHoKzxUiUJkrWY\"><g data-tid=\"gIZkbQtewqHoKzxUiUJkrWY\" class=\"typst-group\"><g transform=\"translate(0.000,11.848)\" data-tid=\"p0MBWXZ7IFqIYLnGwxbkmf8\"><g data-tid=\"g0MBWXZ7IFqIYLnGwxbkmf8\" class=\"typst-text\" fill=\"#000\" transform=\"scale(0.0087890625,-0.0087890625)\"><use x=\"0\" href=\"#gFkv8MxQ\"/><use x=\"952\" href=\"#gFkv8Mxo\"/><g transform=\"scale(16,-16)\"><foreignObject x=\"0\" y=\"-114.44\" width=\"119.00\" height=\"128.00\"><h5:div class=\"tsel\" style=\"font-size: 128px\">17</h5:div></foreignObject></g></g></g><g transform=\"translate(0.000,0.000)\" data-tid=\"p0+gtZddxoNYshhlcZUkfo8\"><g data-tid=\"g0+gtZddxoNYshhlcZUkfo8\" class=\"typst-content-hint\" data-hint=\"a\"></g></g></g></g></g></g><g transform=\"translate(141.732,141.732)\" data-tid=\"pg9+elDdhYPAKDBaYD8hPZw\"><g data-tid=\"gg9+elDdhYPAKDBaYD8hPZw\"><path class=\"typst-shape\" d=\"M 0 0 M 24.803188 0 C 38.48919 0 49.606377 11.117186 49.606377 24.803188 C 49.606377 24.803188 49.606377 24.803188 49.606377 24.803188 C 49.606377 38.48919 38.48919 49.606377 24.803188 49.606377 C 24.803188 49.606377 24.803188 49.606377 24.803188 49.606377 C 11.117186 49.606377 0 38.48919 0 24.803188 C 0 24.803188 0 24.803188 0 24.803188 C 0 11.117186 11.117186 0 24.803188 0 C 24.803188 0 24.803188 0 24.803188 0 Z \" stroke-width=\"1\" stroke-miterlimit=\"4\" fill=\"none\" stroke=\"#000\" /></g></g><g transform=\"translate(0.000,0.000)\" data-tid=\"pPqjsu0tgD28olHrm5YsOiQ\"><g data-tid=\"gPqjsu0tgD28olHrm5YsOiQ\" class=\"typst-group\"><g transform=\"translate(158.169,160.612)\" data-tid=\"pctzMAPg4L5gT7OWBAfYyLM\"><g data-tid=\"gctzMAPg4L5gT7OWBAfYyLM\" class=\"typst-group\"><g transform=\"translate(0.000,11.848)\" data-tid=\"pR7ELTrDpAucM3wJDLiVThs\"><g data-tid=\"gR7ELTrDpAucM3wJDLiVThs\" class=\"typst-text\" fill=\"#000\" transform=\"scale(0.0087890625,-0.0087890625)\"><use x=\"0\" href=\"#gFkv8MxQ\"/><use x=\"952\" href=\"#gFkv8Mxk\"/><g transform=\"scale(16,-16)\"><foreignObject x=\"0\" y=\"-114.44\" width=\"119.00\" height=\"128.00\"><h5:div class=\"tsel\" style=\"font-size: 128px\">16</h5:div></foreignObject></g></g></g><g transform=\"translate(0.000,0.000)\" data-tid=\"p0+gtZddxoNYshhlcZUkfo8\"><g data-tid=\"g0+gtZddxoNYshhlcZUkfo8\" class=\"typst-content-hint\" data-hint=\"a\"></g></g></g></g></g></g><g transform=\"translate(248.032,141.732)\" data-tid=\"pg9+elDdhYPAKDBaYD8hPZw\"><g data-tid=\"gg9+elDdhYPAKDBaYD8hPZw\"><path class=\"typst-shape\" d=\"M 0 0 M 24.803188 0 C 38.48919 0 49.606377 11.117186 49.606377 24.803188 C 49.606377 24.803188 49.606377 24.803188 49.606377 24.803188 C 49.606377 38.48919 38.48919 49.606377 24.803188 49.606377 C 24.803188 49.606377 24.803188 49.606377 24.803188 49.606377 C 11.117186 49.606377 0 38.48919 0 24.803188 C 0 24.803188 0 24.803188 0 24.803188 C 0 11.117186 11.117186 0 24.803188 0 C 24.803188 0 24.803188 0 24.803188 0 Z \" stroke-width=\"1\" stroke-miterlimit=\"4\" fill=\"none\" stroke=\"#000\" /></g></g><g transform=\"translate(0.000,0.000)\" data-tid=\"pc72CS4QfG6IqR8fxpM4uDE\"><g data-tid=\"gc72CS4QfG6IqR8fxpM4uDE\" class=\"typst-group\"><g transform=\"translate(264.468,160.612)\" data-tid=\"p3YMEgg9I3rIkgTzf7HjWvA\"><g data-tid=\"g3YMEgg9I3rIkgTzf7HjWvA\" class=\"typst-group\"><g transform=\"translate(0.000,11.848)\" data-tid=\"pJ9WB+zvEuDY/tUIGPqeEtQ\"><g data-tid=\"gJ9WB+zvEuDY/tUIGPqeEtQ\" class=\"typst-text\" fill=\"#000\" transform=\"scale(0.0087890625,-0.0087890625)\"><use x=\"0\" href=\"#gFkv8MxQ\"/><use x=\"952\" href=\"#gFkv8Mxs\"/><g transform=\"scale(16,-16)\"><foreignObject x=\"0\" y=\"-114.44\" width=\"119.00\" height=\"128.00\"><h5:div class=\"tsel\" style=\"font-size: 128px\">18</h5:div></foreignObject></g></g></g><g transform=\"translate(0.000,0.000)\" data-tid=\"p0+gtZddxoNYshhlcZUkfo8\"><g data-tid=\"g0+gtZddxoNYshhlcZUkfo8\" class=\"typst-content-hint\" data-hint=\"a\"></g></g></g></g></g></g><g transform=\"translate(283.465,212.599)\" data-tid=\"pg9+elDdhYPAKDBaYD8hPZw\"><g data-tid=\"gg9+elDdhYPAKDBaYD8hPZw\"><path class=\"typst-shape\" d=\"M 0 0 M 24.803188 0 C 38.48919 0 49.606377 11.117186 49.606377 24.803188 C 49.606377 24.803188 49.606377 24.803188 49.606377 24.803188 C 49.606377 38.48919 38.48919 49.606377 24.803188 49.606377 C 24.803188 49.606377 24.803188 49.606377 24.803188 49.606377 C 11.117186 49.606377 0 38.48919 0 24.803188 C 0 24.803188 0 24.803188 0 24.803188 C 0 11.117186 11.117186 0 24.803188 0 C 24.803188 0 24.803188 0 24.803188 0 Z \" stroke-width=\"1\" stroke-miterlimit=\"4\" fill=\"none\" stroke=\"#000\" /></g></g><g transform=\"translate(0.000,0.000)\" data-tid=\"phrY+Z9AhT6IJ0raU8H2Z20\"><g data-tid=\"ghrY+Z9AhT6IJ0raU8H2Z20\" class=\"typst-group\"><g transform=\"translate(299.901,231.478)\" data-tid=\"p3YMEgg9I3rIkgTzf7HjWvA\"><g data-tid=\"g3YMEgg9I3rIkgTzf7HjWvA\" class=\"typst-group\"><g transform=\"translate(0.000,11.848)\" data-tid=\"pJ9WB+zvEuDY/tUIGPqeEtQ\"><g data-tid=\"gJ9WB+zvEuDY/tUIGPqeEtQ\" class=\"typst-text\" fill=\"#000\" transform=\"scale(0.0087890625,-0.0087890625)\"><use x=\"0\" href=\"#gFkv8MxQ\"/><use x=\"952\" href=\"#gFkv8Mxs\"/><g transform=\"scale(16,-16)\"><foreignObject x=\"0\" y=\"-114.44\" width=\"119.00\" height=\"128.00\"><h5:div class=\"tsel\" style=\"font-size: 128px\">18</h5:div></foreignObject></g></g></g><g transform=\"translate(0.000,0.000)\" data-tid=\"p0+gtZddxoNYshhlcZUkfo8\"><g data-tid=\"g0+gtZddxoNYshhlcZUkfo8\" class=\"typst-content-hint\" data-hint=\"a\"></g></g></g></g></g></g><g transform=\"translate(283.928,188.721)\" data-tid=\"pPhJP5Jp1+g0O87MigvEZhc\"><g data-tid=\"gPhJP5Jp1+g0O87MigvEZhc\"><path class=\"typst-shape\" d=\"M 0 0 M 0 0 C 0 0 13.247602 26.495205 13.247602 26.495205 \" stroke-width=\"1\" stroke-miterlimit=\"4\" fill=\"none\" stroke=\"#000\" /></g></g><g transform=\"translate(181.415,115.508)\" data-tid=\"pe4ap9OV750YNKgxJ4zgfEc\"><g data-tid=\"ge4ap9OV750YNKgxJ4zgfEc\"><path class=\"typst-shape\" d=\"M 0 0 M 23.39148 0 C 23.39148 0 0 31.18864 0 31.18864 \" stroke-width=\"1\" stroke-miterlimit=\"4\" fill=\"none\" stroke=\"#000\" /></g></g><g transform=\"translate(234.564,115.508)\" data-tid=\"pcjSicz8EyqMuOLbmGmcpTQ\"><g data-tid=\"gcjSicz8EyqMuOLbmGmcpTQ\"><path class=\"typst-shape\" d=\"M 0 0 M 0 0 C 0 0 23.39148 31.18864 23.39148 31.18864 \" stroke-width=\"1\" stroke-miterlimit=\"4\" fill=\"none\" stroke=\"#000\" /></g></g><g transform=\"translate(78.770,41.277)\" data-tid=\"plgNNT9xBTlQM0nKP8Wewq8\"><g data-tid=\"glgNNT9xBTlQM0nKP8Wewq8\"><path class=\"typst-shape\" d=\"M 0 0 M 42.657597 0 C 42.657597 0 0 37.917866 0 37.917866 \" stroke-width=\"1\" stroke-miterlimit=\"4\" fill=\"none\" stroke=\"#000\" /></g></g><g transform=\"translate(158.494,41.277)\" data-tid=\"p7ZPPSi/2HwgkUviKDgPaFg\"><g data-tid=\"g7ZPPSi/2HwgkUviKDgPaFg\"><path class=\"typst-shape\" d=\"M 0 0 M 0 0 C 0 0 42.657597 37.917866 42.657597 37.917866 \" stroke-width=\"1\" stroke-miterlimit=\"4\" fill=\"none\" stroke=\"#000\" /></g></g></g></g></g></g></svg>"} alt="一棵来自 Typst 的树">一棵来自 <em><strong>Typst</strong></em> 的树</SVGCaptioned><h1>源码</h1>
<BlockCode lang="md" html={"<code class=\"language-md\"><span class=\"token code\"><span class=\"token punctuation\">```</span><span class=\"token code-language\">typst 一棵来自 ***Typst*** 的树</span>\n<span class=\"token code-block language-typst\">#import \"@preview/cetz:0.2.2\": canvas, draw, tree\n#canvas(length: 2.5cm, {\n    import draw: *\n    tree.tree(\n        draw-node: (node, ..) => {\n            if node.content == [] { return none }\n            circle((), radius: .35, stroke: black)\n            content((), [#node.content])\n        },\n        draw-edge: (from, to, pa, child) => {\n            if child.content == [] { return none }\n            tree.default-draw-edge(from, to, pa, child)\n        },\n        ([15], ([13], [12], [14]), ([17], [16], ([18], [], [18])))\n    )\n})</span>\n<span class=\"token punctuation\">```</span></span>\n</code>"}></BlockCode></Tab>
<hr />
<h2 id="t-10" tabindex="-1" class="heading">选项卡 <a class="cursor header-anchor" href="#t-10">¶</a></h2>
<BlockCode lang="md" html={"<code class=\"language-md\">::tab\n<span class=\"token title important\"><span class=\"token punctuation\">#</span> &lt;选项卡 1></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>选项卡</span> <span class=\"token attr-name\">1</span> <span class=\"token attr-name\">内容</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token title important\"><span class=\"token punctuation\">#</span> &lt;选项卡 2></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>选项卡</span> <span class=\"token attr-name\">2</span> <span class=\"token attr-name\">内容</span><span class=\"token punctuation\">></span></span>\n\n[...]\n::\n</code>"}></BlockCode><Tab>
<h1>选项卡 1</h1>
<p>这里是「<strong>选项卡 1</strong>」 的内容</p>
<h1>选项卡 2</h1>
<p>这里是「<strong>选项卡 2</strong>」 的内容</p>
<h1><InlineMath data={"\\LaTeX"}></InlineMath> 公式</h1>
<p>选项卡也是支持 <InlineMath data={"\\LaTeX"}></InlineMath> 的！</p>
<BlockMath data={"\\begin{aligned}\n&\\Bigl(f*g\\Bigr)(6) \\\\\n=&\\sum_{d\\mid 6}f(d)g\\biggl(\\dfrac{6}{d}\\biggr) \\\\\n=&f(1)g(6)+f(2)g(3)+f(3)g(2)+f(6)g(1)\n\\end{aligned}\n"}></BlockMath><h1>Lorem</h1>
<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>
<h1>一个名字很长很长很长很长很长很长的选项卡（而且名字里面还有 <code class="inline-code">code</code>）</h1>
<BlockCode lang="python" html={"<code class=\"language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello World\"</span><span class=\"token punctuation\">)</span>\n</code>"}></BlockCode><h1>源码</h1>
<BlockCode lang="md" html={"<code class=\"language-md\">:::tab\n<span class=\"token title important\"><span class=\"token punctuation\">#</span> 选项卡 1</span>\n\n这里是「<span class=\"token bold\"><span class=\"token punctuation\">**</span><span class=\"token content\">选项卡 1</span><span class=\"token punctuation\">**</span></span>」 的内容\n\n<span class=\"token title important\"><span class=\"token punctuation\">#</span> 选项卡 2</span>\n\n这里是「<span class=\"token bold\"><span class=\"token punctuation\">**</span><span class=\"token content\">选项卡 2</span><span class=\"token punctuation\">**</span></span>」 的内容\n\n<span class=\"token title important\"><span class=\"token punctuation\">#</span> $\\LaTeX$ 公式</span>\n\n选项卡也是支持 $\\LaTeX$ 的！\n\n$$\n\\begin{aligned}\n&amp;\\Bigl(f*g\\Bigr)(6) \\\\\n=&amp;\\sum_{d\\mid 6}f(d)g\\biggl(\\dfrac{6}{d}\\biggr) \\\\\n=&amp;f(1)g(6)+f(2)g(3)+f(3)g(2)+f(6)g(1)\n\\end{aligned}\n$$\n\n<span class=\"token title important\"><span class=\"token punctuation\">#</span> Lorem</span>\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n\n<span class=\"token title important\"><span class=\"token punctuation\">#</span> 一个名字很长很长很长很长很长很长的选项卡（而且名字里面还有 `code`）</span>\n\n<span class=\"token code\"><span class=\"token punctuation\">```</span><span class=\"token code-language\">python</span>\n<span class=\"token code-block language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello World\"</span><span class=\"token punctuation\">)</span></span>\n<span class=\"token punctuation\">```</span></span>\n:::\n</code>"}></BlockCode></Tab>
<Tab>
<h1>唯一一个 Tab！</h1>
<Note>这个选项卡只有这一个 Tab</Note>
</Tab>
</>